package View;

import Controller.PrestamosDAO;
import Model.Devoluciones;
import Controller.DevolucionesDAO;
import Model.PrestamoComboItem;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;


public class FormularioDevoluciones extends javax.swing.JDialog {
    private String Mode;
    private int id;
    private PrestamosDAO dao;
    private DevolucionesDAO dao1;
    private javax.swing.JComboBox<PrestamoComboItem> cmbPrestamo;
    private ListadoDevoluciones parent;

    
    public FormularioDevoluciones(ListadoDevoluciones pParent, boolean modal, String pMode, int pId) {
        super(pParent, modal);
        this.parent = pParent;
        initComponents();
        dao = new PrestamosDAO();
        dao1 = new DevolucionesDAO();
        
        cmbPrestamo = new javax.swing.JComboBox<>();
        getContentPane().add(cmbPrestamo);
        cmbPrestamo.setBounds(210, 110, 310, 30);

        cargarPrestamosEnCombo(); // aquí cargás todos los préstamos directamente
        
        this.Mode = pMode;
        this.id = pId;
        txt_id.setText(String.valueOf(pId)); // Mostrar el ID de la devolución

        if (Mode.equals("INS")) {
        txt_id.setEnabled(false);
        btn_Accion.setText("Insertar");
    
        } else {
        // Obtener devolución desde la base de datos si vas a actualizar o eliminar (aquí asumo que harás luego el método getById en DevolucionesDAO)
        Devoluciones devolucion = dao1.getById(id); 

         if (devolucion != null) {
        txt_id.setText(String.valueOf(devolucion.getDevolucionesId()));
        txt_fecha.setText(devolucion.getFechaDevolucion().toString());
        txt_multa.setText(String.valueOf(devolucion.getMulta()));

        // Seleccionar el préstamo correspondiente en el combo
        for (int i = 0; i < cmbPrestamo.getItemCount(); i++) {
            if (cmbPrestamo.getItemAt(i).getId() == devolucion.getPrestamoId()) {
                cmbPrestamo.setSelectedIndex(i);
                break;
            }
        }

        if (Mode.equals("UPD")) {
            txt_id.setEnabled(false);
            btn_Accion.setText("Actualizar");
        } else if (Mode.equals("DLT")) {
            // Deshabilitar campos para evitar edición
            btn_Accion.setText("Eliminar");
            txt_id.setEnabled(false);
            cmbPrestamo.setEnabled(false);
            txt_fecha.setEditable(false);
            txt_multa.setEditable(false);
        }
    }
}
    }
   
    private void cargarPrestamosEnCombo() {
        List<PrestamoComboItem> prestamos = dao.getAllPrestamosConLibro();
        cmbPrestamo.removeAllItems();
        for (PrestamoComboItem p : prestamos) {
            cmbPrestamo.addItem(p);
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Devolucion = new javax.swing.JLabel();
        lbl_Prestamo = new javax.swing.JLabel();
        lbl_fecha = new javax.swing.JLabel();
        lblMulta = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_fecha = new javax.swing.JTextField();
        txt_multa = new javax.swing.JTextField();
        btn_Accion = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbl_Devolucion.setText("DevoluciónID:");

        lbl_Prestamo.setText("Prestamo:");

        lbl_fecha.setText("Fecha Devolucion:");

        lblMulta.setText("Multa:");

        btn_Accion.setText("Insertar");
        btn_Accion.setActionCommand("");
        btn_Accion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AccionActionPerformed(evt);
            }
        });

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl_Prestamo)
                            .addComponent(lbl_Devolucion)
                            .addComponent(lblMulta)
                            .addComponent(lbl_fecha))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_multa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(btn_Accion)
                        .addGap(104, 104, 104)
                        .addComponent(btn_salir)))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Devolucion)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(lbl_Prestamo)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_fecha))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMulta)
                    .addComponent(txt_multa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Accion)
                    .addComponent(btn_salir))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AccionActionPerformed
        // TODO add your handling code here:
if (Mode.equals("INS")) {
    try {
        // Validación: campos vacíos
        if (cmbPrestamo.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un préstamo.");
            return;
        }

        if (txt_fecha.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar la fecha de devolución.");
            return;
        }

        if (txt_multa.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar la multa.");
            return;
        }

        // Validación: formato de fecha
        java.sql.Date fechaSQL;
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.setLenient(false); // para validar fechas inválidas como 2024-02-30
            java.util.Date fechaUtil = sdf.parse(txt_fecha.getText().trim());
            fechaSQL = new java.sql.Date(fechaUtil.getTime());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha inválido. Use yyyy-MM-dd.");
            return;
        }

        // Validación: multa numérica y no negativa
        float multa;
        try {
            multa = Float.parseFloat(txt_multa.getText().trim());
            if (multa < 0) {
                JOptionPane.showMessageDialog(this, "La multa no puede ser negativa.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La multa debe ser un número válido.");
            return;
        }

        // Obtener préstamo
        PrestamoComboItem prestamoSeleccionado = (PrestamoComboItem) cmbPrestamo.getSelectedItem();
        int prestamoId = prestamoSeleccionado.getId();

        // Crear objeto devolución
        Devoluciones devolucion = new Devoluciones(prestamoId, fechaSQL, multa);

        if (dao1.insert(devolucion)) {
            JOptionPane.showMessageDialog(this, "Devolución insertada correctamente.");
            parent.refrescarInfo();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo insertar la devolución.");
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al insertar: " + e.getMessage());
    }
}


if (Mode.equals("UPD")) {
    try {
        // Crear objeto devolución y cargarle los datos
        Devoluciones devolucion = new Devoluciones();
        devolucion.setDevolucionesId(id);

        PrestamoComboItem prestamoSeleccionado = (PrestamoComboItem) cmbPrestamo.getSelectedItem();
        devolucion.setPrestamoId(prestamoSeleccionado.getId());

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date fechaUtil = sdf.parse(txt_fecha.getText());
        java.sql.Date fechaSQL = new java.sql.Date(fechaUtil.getTime());
        devolucion.setFechaDevolucion(fechaSQL);

        float multa = Float.parseFloat(txt_multa.getText());
        devolucion.setMulta(multa);

        if (dao1.update(devolucion)) {
            JOptionPane.showMessageDialog(this, "Devolución actualizada correctamente.");
            parent.refrescarInfo();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar la devolución.");
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage());
    }
}

if (Mode.equals("DLT")) {
    int confirmacion = JOptionPane.showConfirmDialog(this, "¿Deseas eliminar esta devolución?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

    if (confirmacion == JOptionPane.YES_OPTION) {
        boolean eliminado = dao1.delete(id);

        if (eliminado) {
            JOptionPane.showMessageDialog(this, "Devolución eliminada correctamente.");
            parent.refrescarInfo();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar la devolución.");
        }
    }
}

    }//GEN-LAST:event_btn_AccionActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioDevoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioDevoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioDevoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioDevoluciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormularioDevoluciones dialog = new FormularioDevoluciones(new ListadoDevoluciones(), true,"INS",0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Accion;
    private javax.swing.JButton btn_salir;
    private javax.swing.JLabel lblMulta;
    private javax.swing.JLabel lbl_Devolucion;
    private javax.swing.JLabel lbl_Prestamo;
    private javax.swing.JLabel lbl_fecha;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_multa;
    // End of variables declaration//GEN-END:variables
}
