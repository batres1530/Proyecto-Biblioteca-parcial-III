package View;

import Controller.EjemplaresDAO;
import Model.Ejemplares;
import Model.LibroComboItem;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;


public class FormularioEjemplar extends javax.swing.JDialog {
    
    private JComboBox<LibroComboItem> cmbLibro;
    private String Mode;
    private int id;
    private EjemplaresDAO dao = new EjemplaresDAO();
    private ListadoEjemplares parent;


    public FormularioEjemplar(ListadoEjemplares pParent, boolean modal, String pMode, int pId) {
        
        super(pParent, modal);
        this.parent = pParent;
        this.Mode = pMode;
        this.id = pId;

        initComponents();
        cmbLibro = new JComboBox<>();
        cmbLibro.setBounds(200, 110, 200, 25);
        add(cmbLibro);
        cargarLibros();

        txt_id.setText(String.valueOf(pId));
        txt_id.setEnabled(false);

        if (Mode.equals("INS")) {
            btn_accion.setText("Insertar");
        } else {
            Ejemplares ejemplar = dao.buscarPorId(id);
            if (ejemplar != null) {
                txt_id.setText(String.valueOf(ejemplar.getEjemplarID()));
                txt_estado.setText(ejemplar.getEstado());

                // Seleccionar en el combo el libro correspondiente
                for (int i = 0; i < cmbLibro.getItemCount(); i++) {
                    LibroComboItem item = cmbLibro.getItemAt(i);
                    if (item.getId() == ejemplar.getLibrosID()) {
                        cmbLibro.setSelectedIndex(i);
                        break;
                    }
                }

                if (Mode.equals("UPD")) {
                    btn_accion.setText("Actualizar");
                } else if (Mode.equals("DLT")) {
                    txt_estado.setEditable(false);
                    cmbLibro.setEnabled(false);
                    btn_accion.setText("Eliminar");
                }
            }
        }
        
    }
    
    private void cargarLibros() {
        EjemplaresDAO dao = new EjemplaresDAO();
        List<LibroComboItem> libros = dao.obtenerLibrosParaCombo();

        cmbLibro.removeAllItems();
        for (LibroComboItem libro : libros) {
            cmbLibro.addItem(libro);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_id = new javax.swing.JLabel();
        lbl_libro = new javax.swing.JLabel();
        lbl_estado = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_estado = new javax.swing.JTextField();
        btn_accion = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbl_id.setText("ID:");

        lbl_libro.setText("Libro:");

        lbl_estado.setText("Estado:");

        btn_accion.setText("Insertar");
        btn_accion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_accionActionPerformed(evt);
            }
        });

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_accion)
                        .addGap(70, 70, 70)
                        .addComponent(btn_salir))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_id)
                            .addComponent(lbl_libro)
                            .addComponent(lbl_estado))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_id)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(lbl_libro)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_estado)
                    .addComponent(txt_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_accion)
                    .addComponent(btn_salir))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_accionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_accionActionPerformed
        // TODO add your handling code here:
        if (Mode.equals("INS")) {
            try {
                String estado = txt_estado.getText().trim();
                LibroComboItem libroSeleccionado = (LibroComboItem) cmbLibro.getSelectedItem();

                if (estado.isEmpty() || libroSeleccionado == null) {
                    JOptionPane.showMessageDialog(this, "Debe ingresar el estado y seleccionar un libro.");
                    return;
                }

                Ejemplares nuevoEjemplar = new Ejemplares();
                nuevoEjemplar.setEstado(estado);
                nuevoEjemplar.setLibrosID(libroSeleccionado.getId());

                if (dao.insert(nuevoEjemplar)) {
                    JOptionPane.showMessageDialog(this, "Ejemplar insertado correctamente.");
                    parent.refrescarInfo();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo insertar el ejemplar.");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al insertar: " + e.getMessage());
            }
        }

        if (Mode.equals("UPD")) {
            try {
                String estado = txt_estado.getText().trim();
                LibroComboItem libroSeleccionado = (LibroComboItem) cmbLibro.getSelectedItem();

                if (estado.isEmpty() || libroSeleccionado == null) {
                    JOptionPane.showMessageDialog(this, "Debe ingresar el estado y seleccionar un libro.");
                    return;
                }

                Ejemplares ejemplarActualizado = new Ejemplares();
                ejemplarActualizado.setEjemplarID(id);
                ejemplarActualizado.setEstado(estado);
                ejemplarActualizado.setLibrosID(libroSeleccionado.getId());

                if (dao.update(ejemplarActualizado)) {
                    JOptionPane.showMessageDialog(this, "Ejemplar actualizado correctamente.");
                    parent.refrescarInfo();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo actualizar el ejemplar.");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage());
            }
        }

        if (Mode.equals("DLT")) {
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Deseas eliminar este ejemplar?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                boolean eliminado = dao.delete(id);

                if (eliminado) {
                    JOptionPane.showMessageDialog(this, "Ejemplar eliminado correctamente.");
                    parent.refrescarInfo();
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el ejemplar.");
                }
            }
        }

    }//GEN-LAST:event_btn_accionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioEjemplar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioEjemplar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioEjemplar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioEjemplar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormularioEjemplar dialog = new FormularioEjemplar(new ListadoEjemplares(), true,"INS",0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_accion;
    private javax.swing.JButton btn_salir;
    private javax.swing.JLabel lbl_estado;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_libro;
    private javax.swing.JTextField txt_estado;
    private javax.swing.JTextField txt_id;
    // End of variables declaration//GEN-END:variables
}
